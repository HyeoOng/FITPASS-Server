<?xml  version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.fitpass.post.PostDao">

    <insert id="insertPost" parameterType="Post">
        INSERT INTO post (user_id, place_id, sport_code, title, created_at, updated_at, exercise_duration, content, is_public)
        VALUES (#{userId}, #{placeId}, #{sportCode}, #{title}, now(), now(), #{exerciseDuration}, #{content}, #{isPublic})
    </insert>

    <select id="selectOne" parameterType="int" resultType="Post">
        SELECT post_id, user_id, place_id, sport_code, title, created_at, updated_at
        , exercise_duration, content, is_public,
        (SELECT save_folder FROM PostPhoto WHERE post_id = p.post_id LIMIT 1) as photo_url
        FROM post p
        WHERE post_id=#{postId}

    </select>

    <select id="selectAll" resultType="Post">
        SELECT post_id, user_id, place_id, sport_code, title, created_at, updated_at
        , exercise_duration, content, is_public,
        (SELECT save_folder FROM PostPhoto WHERE post_id = p.post_id LIMIT 1) as photo_url
        FROM post p
        WHERE is_public=0
    </select>

    <update id="updatePost" parameterType="Post">
        UPDATE post
        SET place_id=#{placeId}, sport_code=#{sportCode}, title=#{title}, updated_at=now(), exercise_duration=#{exerciseDuration}, content=#{content}, is_public=#{isPublic}
        WHERE post_id = #{postId}
    </update>

    <delete id="deletePost" parameterType="int">
        DELETE FROM post WHERE post_id=#{postId}
    </delete>

    <select id="selectFriendPosts" parameterType="int" resultType="Post">
        SELECT post_id, user_id, place_id, sport_code, title, created_at, updated_at
        , exercise_duration, content, is_public,
        (SELECT save_folder FROM PostPhoto WHERE post_id = p.post_id LIMIT 1) as photo_url
        FROM post p
        WHERE user_id IN (
        SELECT u.user_id
        FROM User u
        INNER JOIN Friend f
        ON (f.from_user = u.user_id OR f.to_user = u.user_id)
        WHERE (f.from_user = #{userId} OR f.to_user = #{userId})
        AND f.status = 1
        AND u.user_id != #{userId}
        )
        AND is_public = 1;
    </select>

    <select id="selectUserPost" parameterType="int" resultType="Post">
        SELECT post_id, user_id, place_id, sport_code, title, created_at, updated_at
        , exercise_duration, content, is_public,
        (SELECT save_folder FROM PostPhoto WHERE post_id = p.post_id LIMIT 1) as photo_url
        FROM post p
        WHERE user_id = #{userId} AND is_public = 0
        ORDER BY created_at DESC
        LIMIT #{size} OFFSET #{offset}
    </select>

    <select id="selectPostId" parameterType="Post" resultType="int">
        SELECT post_id FROM post
        WHERE user_id = #{userId} AND title = #{title} AND content = #{content} AND sport_code = #{sportCode} AND exercise_duration = #{exerciseDuration}
        ORDER BY created_at DESC
        LIMIT 1;
    </select>

    <select id="totalPostNum" resultType="int">
        SELECT COUNT(*) FROM post
    </select>

</mapper>