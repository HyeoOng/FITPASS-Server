<?xml  version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.fitpass.post.PostDao">

    <insert id="insertPost" parameterType="Post">
        INSERT INTO post (user_id, place_id, sport_code, photo_id, title, create_at, updated_at, exercise_duration, content, is_public)
        VALUES (#{userId}, #{placeId}, #{photoId}, #{sportCode}, #{photoId}, #{title}, now(), now(), #{exerciseDuration}, #{content}, #{isPublic})
    </insert>

    <select id="selectOne" parameterType="int" resultType="Post">
        SELECT p.post_id, p.user_id, p.place_id, p.photo_id, p.sport_code, p.title, p.created_at, p.updated_at, p.exercise_duration, p.content, pp.photo_url
        FROM post as p
        LEFT JOIN PostPhoto as pp
        ON p.photo_id = pp.id
        WHERE post_id=#{postId}

    </select>

    <select id="selectAll" resultType="Post">
        SELECT p.post_id, p.user_id, p.place_id, p.photo_id, p.sport_code, p.title, p.created_at, p.updated_at, p.exercise_duration, p.content, pp.photo_url
        FROM post as p
        LEFT JOIN PostPhoto as pp
        ON p.photo_id = pp.id
        WHERE is_public=0
    </select>

    <update id="updatePost" parameterType="Post">
        UPDATE post
        SET place_id=#{placeId}, sport_code=#{sportCode}, photo_id=#{photoId}, title=#{title}, updated_at=now(), exercise_duration=#{exerciseDuration}, content=#{content}, is_public=#{isPublic}
        WHERE post_id = #{postId}
    </update>

    <delete id="deletePost" parameterType="int">
        DELETE FROM post WHERE post_id=#{postId}
    </delete>

    <select id="selectFriendPosts" parameterType="int" resultType="Post">
        SELECT p.post_id, p.user_id, p.place_id, p.photo_id, p.sport_code, p.title,
        p.created_at, p.updated_at, p.exercise_duration, p.content, pp.photo_url
        FROM Post p
        LEFT JOIN PostPhoto pp
        ON p.photo_id = pp.id
        WHERE p.user_id IN (
        SELECT u.user_id
        FROM User u
        INNER JOIN Friend f
        ON (f.from_user = u.user_id OR f.to_user = u.user_id)
        WHERE (f.from_user = #{userId} OR f.to_user = #{userId})
        AND f.status = 1
        AND u.user_id != #{userId}
        )
        AND p.is_public = 1;
    </select>

</mapper>